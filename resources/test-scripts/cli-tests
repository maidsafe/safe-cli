#!/bin/bash
# This script will not work if called individually.
# The integration tests require the auth daemon to be running.
# It's better to either run the all-tests script or call Makefile targets.

set -e -x

function run_cli_tests() {
    cd safe-cli
    rm -f fake_vault_data.json
    cargo test --release --features=scl-mock --test cli_cat -- --test-threads=1
    rm -f fake_vault_data.json
    cargo test --release --features=scl-mock --test cli_files -- --test-threads=1
    rm -f fake_vault_data.json
    cargo test --release --features=scl-mock --test cli_keys -- --test-threads=1
    rm -f fake_vault_data.json
    cargo test --release --features=scl-mock --test cli_wallet -- --test-threads=1
    rm -f fake_vault_data.json
    cargo test --release --features=scl-mock --test cli_nrs -- --test-threads=1
    cd -
}

function run_cli_tests_with_auth_daemon() {
    # now let's run the integration tests but without fake-auth, using the safe_auth CLI to get credentials
    # get auth credentials which will be then used by the integration tests to connect to mock-network
    cd safe-cli
    echo "Sending auth request to port:" $RANDOM_PORT_NUMBER
    cargo run --release --features=mock-network -- auth --port $RANDOM_PORT_NUMBER

    cargo test --release --features=mock-network --test cli_cat -- --test-threads=1
    cargo test --release --features=mock-network --test cli_files -- --test-threads=1
    cargo test --release --features=mock-network --test cli_keys -- --test-threads=1
    cargo test --release --features=mock-network --test cli_wallet -- --test-threads=1
    cargo test --release --features=mock-network --test cli_nrs -- --test-threads=1
    cd -
}

run_cli_tests
run_cli_tests_with_auth_daemon
