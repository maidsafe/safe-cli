name: PR

on: [pull_request, push]

env:
  # Run all cargo commands with --verbose.
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1
  # Deny all compiler warnings.
  RUSTFLAGS: "-D warnings"

jobs:
  clippy:
    if: ${{ github.repository_owner == 'maidsafe' }}
    name: Clippy & fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust and required components
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Check if the code is formatted correctly.
      - name: Check formatting
        run: cargo fmt --all -- --check

      # Run Clippy.
      - name: Clippy checks
        run: cargo clippy --all-targets --all-features

  check_pr_size:
    name: Check PR size doesn't break set limit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: maidsafe/pr_size_checker@v1.1
      with:
        max_lines_changed: 200
  
  coverage:
    # if: ${{ github.repository_owner == 'maidsafe' }}
    name: Code coverage checks
    runs-on: ubuntu-latest
    if: false
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust and required components
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Run cargo tarpaulin
      - name: Code Coverage - sn_api
        uses: actions-rs/tarpaulin@master
        with:
          args: '-v --manifest-path=sn_api/Cargo.toml --release --exclude-files=sn_cli/*,qjsonrpc/*,sn_authd/* --out Lcov -- --test-threads=1'

      # Push tarpaulin results to coveralls.io
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info

  test-component:
    # if: ${{ github.repository_owner == 'maidsafe' }} // re-enable this once these tests are run again
    if: false
    name: Test Component
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        component: [api-tests, cli-tests]
    steps:
      # Set git to checkout symlinks correctly on Windows only
      # Otherwise the symlinks aren't created and tests fail
      - name: Set git to checkout symlinks correctly on Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: git config --global --add core.symlinks true

      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Run tests.
      - shell: bash
        run: ./resources/test-scripts/${{ matrix.component }}
